رائع — نبدأ خطوة بخطوة وبأسلوب عملي ومهندسي، وبقليل من روح الدعابة المحسوبة (وعد: لن نغيّر أرقام الرواتب). سأشرح: 1) تصميم واجهة الـ كشف بصيغة طباعة (HTML/CSS جاهز للطباعة A4، يدعم RTL/العربية)، و2) دالة تصدير Excel (بايثون/Flask + openpyxl) تنتج ملف مطابق لتصميم الصورة — ألوان، دمج خلايا، حدود، تنسيقات أرقام، ولون خلايا المجمل (الأخضر)، ونصوص بالخط العربي.

1 — مخطط التصميم (كيف نترجمه عمليًّا)

الصفحة A4 (Landscape أو Portrait حسب الصورة — هنا سنستخدم Landscape لأن الجدول عريض).

اتجاه النص: direction: rtl; وtext-align: right.

رأس الصفحة: شعار / اسم الشركة، عنوان الكشف، فترة التقرير.

جدول رئيسي: رؤوس أعمدة ممتدة (دمج رؤوس عند الحاجة)، صفوف بيانات للعاملين، أعمدة للأجر اليومي، أيام العمل، إجمالي الساعات، المبلغ المستحق، المبلغ المستلم، المتبقي، ملاحظات.

صف إجماليات أخضر في أسفل الجدول، مع أرقام مميزة (نص أبيض أو سهم).

تذييل: "الملخص النهائي" مع خلايا أرقام ملونة، وصناديق توقيع (مستطيلات رمادية).

ألوان وخطوط: استخدم فونت عربي مثل Tahoma أو Cairo ودرجات أزرق/أخضر مناسبة.



---

2 — كود HTML/CSS (صفحة للطباعة على A4، RTL)

انسخ هذا الملف كـ report.html وجرب طباعته أو حفظه PDF من المتصفح.

<!doctype html>
<html lang="ar">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width,initial-scale=1">
<title>كشف تصفية للعمال - نموذج</title>
<style>
  @page { size: A4 landscape; margin: 15mm; }
  body {
    font-family: Tahoma, "Segoe UI", "Cairo", sans-serif;
    direction: rtl;
    color: #222;
    margin: 0;
    -webkit-print-color-adjust: exact; /* للطباعة الألوان */
  }
  .sheet {
    width: 100%;
    box-sizing: border-box;
    padding: 8px;
  }

  /* رأس التقرير */
  .header {
    text-align: center;
    margin-bottom: 8px;
  }
  .company { color: #0070b8; font-size: 20px; font-weight: 700; }
  .title { font-size: 16px; margin-top: 2px; }
  .period { font-size: 12px; color: #555; margin-top: 2px; }

  /* الجدول */
  table.report {
    width: 100%;
    border-collapse: collapse;
    margin-top: 10px;
    table-layout: fixed;
    font-size: 11px;
  }
  table.report th, table.report td {
    border: 1px solid #bfc9d3;
    padding: 6px 8px;
    vertical-align: middle;
    word-wrap: break-word;
  }
  table.report thead th {
    background: #0b71a8; /* أزرق رأس */
    color: white;
    font-weight: 700;
    text-align: center;
  }

  /* رؤوس داخلية بلون فاتح */
  .subhead { background: #f0f6fb; }

  /* أرقام بالخط العريض */
  .num { font-weight: 600; text-align: center; }

  /* تنسيقات خاصة */
  .paid { color: green; font-weight: 700; }   /* مبالغ مدفوعة/متبقي أخضر */
  .due { color: red; font-weight: 700; }      /* مبالغ محجوزة أو غير مسددة */

  /* صف الإجماليات */
  .totals-row td {
    background: #0aa74a; /* أخضر */
    color: white;
    font-weight: 800;
    text-align: center;
  }

  /* خلايا ملاحظات بدون حد واضح */
  .notes { text-align: right; font-size: 11px; }

  /* تذييل التوقيعات */
  .signatures {
    display: flex;
    justify-content: space-between;
    margin-top: 18px;
  }
  .sig-box {
    border: 1px solid #c9c9c9;
    height: 60px;
    width: 30%;
    background: #f3f3f3;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #666;
  }

  /* ضمان الطباعة من صفحة واحدة إذا أمكن */
  @media print {
    .no-print { display: none; }
  }
</style>
</head>
<body>
  <div class="sheet">
    <div class="header">
      <div class="company">شركة الفنيّين للمقاولات والاستشارات الهندسية</div>
      <div class="title">كشف تصفية للعمال</div>
      <div class="period">الفترة: من 25/07/2025 إلى 11/08/2025</div>
    </div>

    <table class="report">
      <thead>
        <tr>
          <th style="width: 3%;">م</th>
          <th style="width: 18%;">الاسم والرقم</th>
          <th style="width: 10%;">المهنة</th>
          <th style="width: 10%;">اسم المشروع</th>
          <th style="width: 8%;">الأجر اليومي</th>
          <th style="width: 6%;">أيام العمل</th>
          <th style="width: 6%;">إجمالي الساعات</th>
          <th style="width: 9%;">المبلغ المستحق</th>
          <th style="width: 9%;">المبلغ المستلم</th>
          <th style="width: 8%;">المتبقي</th>
          <th style="width: 9%;">ملاحظات</th>
        </tr>
      </thead>
      <tbody>
        <!-- مثال صف بيانات -->
        <tr>
          <td class="num">1</td>
          <td>عبدالله عمر</td>
          <td>مساعد ملحم</td>
          <td>مشروع مصنع الحسيني</td>
          <td class="num">8,000 ر.ي</td>
          <td class="num">8.5</td>
          <td class="num">68.0</td>
          <td class="num">68,000 ر.ي</td>
          <td class="num due">47,000 ر.ي</td>
          <td class="num paid">21,000 ر.ي</td>
          <td class="notes">تسليم حسابية: رقم الحوالة 5553736</td>
        </tr>

        <!-- المزيد من الصفوف على نفس النمط... -->

        <!-- صف الإجماليات -->
        <tr class="totals-row">
          <td colspan="7">الإجماليات</td>
          <td>354,000 ر.ي</td>
          <td>264,000 ر.ي</td>
          <td>51,000 ر.ي</td>
          <td></td>
        </tr>
      </tbody>
    </table>

    <!-- الملخص النهائي -->
    <div style="margin-top:14px; border:1px solid #d5e9f2; background:#eaf6ff; padding:10px;">
      <strong>الملخص النهائي :</strong>
      &nbsp;&nbsp; إجمالي المبلغ المستحق: <strong>‏354,000 ر.ي</strong>
      &nbsp;&nbsp; إجمالي المبلغ المحول: <strong style="color:#d9534f;">‏264,000 ر.ي</strong>
      &nbsp;&nbsp; إجمالي المبالغ المتبقية: <strong style="color:#0aa74a;">‏51,000 ر.ي</strong>
    </div>

    <div class="signatures">
      <div class="sig-box">توقيع المدير العام</div>
      <div class="sig-box">توقيع مدير المشروع</div>
      <div class="sig-box">توقيع المهندس</div>
    </div>
  </div>
</body>
</html>

ملاحظات حول HTML:

عدّل أعمدة العرض width بحسب حاجتك.

لإخراج بيانات ديناميكيًا، استخدم قالب (Jinja2 في Flask أو أي template engine) لتركيب صفوف <tr> من بيانات القاعدة.

@page يضمن أن الصفحة جاهزة للطباعة A4 landscape.



---

3 — دالة تصدير Excel مطابقة للتصميم (بايثون + Flask + openpyxl)

الأسلوب: ننشئ workbook، نضبط الاتجاه RTL، ندمج الخلايا لرأس التقرير، ننسق رؤوس الجدول وألوان الخلايا، ونضع صف الإجماليات بالأخضر.

مثال كامل: app.py

from flask import Flask, send_file, make_response
from openpyxl import Workbook
from openpyxl.styles import Font, Alignment, PatternFill, Border, Side, NamedStyle
from openpyxl.utils import get_column_letter
from io import BytesIO
import datetime

app = Flask(__name__)

def create_report_excel(data, period_from, period_to):
    wb = Workbook()
    ws = wb.active
    ws.title = "كشف تصفية"

    # إعدادات عامة للخط والمحاذاة
    ar_font = Font(name="Tahoma", size=10)  # تأكد من وجود الخط على النظام
    bold_font = Font(name="Tahoma", size=11, bold=True)
    center = Alignment(horizontal="center", vertical="center")
    right = Alignment(horizontal="right", vertical="center")
    wrap = Alignment(wrapText=True)

    # حدود رفيعة
    thin = Side(border_style="thin", color="777777")
    border = Border(left=thin, right=thin, top=thin, bottom=thin)

    # صف الرأس: دمج خلايا للعنوان
    ws.merge_cells("A1:K1")
    ws["A1"] = "شركة الفنيّين للمقاولات والاستشارات الهندسية"
    ws["A1"].font = Font(name="Tahoma", size=14, bold=True, color="0070B8")
    ws["A1"].alignment = center

    ws.merge_cells("A2:K2")
    ws["A2"] = "كشف تصفية للعمال"
    ws["A2"].font = Font(name="Tahoma", size=12, bold=True)
    ws["A2"].alignment = center

    ws.merge_cells("A3:K3")
    ws["A3"] = f"الفترة: من {period_from} إلى {period_to}"
    ws["A3"].font = Font(name="Tahoma", size=10)
    ws["A3"].alignment = center

    # صف الرأس للجدول (الصف رقم 5 مثلاً)
    header_row = 5
    headers = ["م", "الاسم والرقم", "المهنة", "اسم المشروع", "الأجر اليومي", "أيام العمل",
               "إجمالي الساعات", "المبلغ المستحق", "المبلغ المستلم", "المتبقي", "ملاحظات"]
    col_widths = [4, 25, 15, 25, 12, 10, 12, 16, 16, 12, 30]
    for i, (h, w) in enumerate(zip(headers, col_widths), start=1):
        cell = ws.cell(row=header_row, column=i, value=h)
        cell.font = Font(name="Tahoma", bold=True, color="FFFFFF")
        cell.fill = PatternFill("solid", fgColor="0B71A8")  # أزرق
        cell.alignment = center
        cell.border = border
        col_letter = get_column_letter(i)
        ws.column_dimensions[col_letter].width = w

    # صفوف البيانات (ابدأ من header_row+1)
    start_row = header_row + 1
    for idx, row in enumerate(data, start=1):
        r = start_row + idx - 1
        ws.cell(row=r, column=1, value=idx).alignment = center
        ws.cell(row=r, column=2, value=row.get("name"))
        ws.cell(row=r, column=3, value=row.get("job"))
        ws.cell(row=r, column=4, value=row.get("project"))
        ws.cell(row=r, column=5, value=row.get("daily_wage"))
        ws.cell(row=r, column=6, value=row.get("work_days"))
        ws.cell(row=r, column=7, value=row.get("hours_total"))
        ws.cell(row=r, column=8, value=row.get("amount_due"))
        ws.cell(row=r, column=9, value=row.get("amount_paid"))
        ws.cell(row=r, column=10, value=row.get("remaining"))
        ws.cell(row=r, column=11, value=row.get("notes"))

        # تطبيق الأنماط لكل خلية في الصف
        for c in range(1, 12):
            cell = ws.cell(row=r, column=c)
            cell.font = ar_font
            cell.alignment = Alignment(horizontal=("center" if c in [1,5,6,7,8,9,10] else "right"), vertical="center")
            cell.border = border
            # صيغة تنسيق أرقام مبسطة
            if c in [5,8,9,10]:
                cell.number_format = '#,##0'  # بدون عملة — يمكن إضافة " ر.ي" لاحقاً كنص

        # ألوان شرطية بسيطة: لو المتبقي > 0 اجعل النص أخضر وإلا أحمر
        rem = row.get("remaining") or 0
        if rem > 0:
            ws.cell(row=r, column=10).font = Font(name="Tahoma", bold=True, color="008000")
        elif rem < 0:
            ws.cell(row=r, column=10).font = Font(name="Tahoma", bold=True, color="FF0000")

    # صف الإجماليات (بعد كل البيانات)
    total_row = start_row + len(data)
    ws.merge_cells(start_row=total_row, start_column=1, end_row=total_row, end_column=7)
    ws.cell(row=total_row, column=1, value="الإجماليات")
    ws.cell(row=total_row, column=1).font = Font(name="Tahoma", bold=True, color="FFFFFF")
    ws.cell(row=total_row, column=1).alignment = center
    # المجموعات بالأعمدة 8،9،10
    sum_due = sum([r.get("amount_due") or 0 for r in data])
    sum_paid = sum([r.get("amount_paid") or 0 for r in data])
    sum_rem  = sum([r.get("remaining") or 0 for r in data])

    ws.cell(row=total_row, column=8, value=sum_due)
    ws.cell(row=total_row, column=9, value=sum_paid)
    ws.cell(row=total_row, column=10, value=sum_rem)

    # تلوين صف الإجماليات بالأخضر
    for c in range(1, 12):
        cell = ws.cell(row=total_row, column=c)
        cell.fill = PatternFill("solid", fgColor="0AA74A")
        cell.font = Font(name="Tahoma", bold=True, color="FFFFFF")
        cell.border = border
        cell.alignment = center

    # إضافة الملخص النهائي أسفل الجدول
    summary_row = total_row + 2
    ws.merge_cells(start_row=summary_row, start_column=1, end_row=summary_row, end_column=11)
    ws.cell(row=summary_row, column=1, value=f"الملخص النهائي: إجمالي المستحق: {sum_due} ر.ي - إجمالي المحول: {sum_paid} ر.ي - إجمالي المتبقي: {sum_rem} ر.ي")
    ws.cell(row=summary_row, column=1).alignment = right
    ws.cell(row=summary_row, column=1).font = Font(name="Tahoma", size=11, bold=True)

    # تذييل: توقيعات — نضع مربعات عن طريق إطار خلايا فارغة
    sig_row = summary_row + 3
    # ثلاث مربعات توقيع: نترك أعمدة: A-C, D-F, G-K
    ws.merge_cells(start_row=sig_row, start_column=1, end_row=sig_row+2, end_column=3)
    ws.merge_cells(start_row=sig_row, start_column=4, end_row=sig_row+2, end_column=6)
    ws.merge_cells(start_row=sig_row, start_column=7, end_row=sig_row+2, end_column=11)
    ws.cell(row=sig_row, column=1, value="توقيع المدير العام").alignment = center
    ws.cell(row=sig_row, column=4, value="توقيع مدير المشروع").alignment = center
    ws.cell(row=sig_row, column=7, value="توقيع المهندس").alignment = center

    # إرجاع الـ Workbook
    return wb

@app.route("/download-report")
def download_report():
    # مثال بيانات
    data = [
        {"name": "عبدالله عمر", "job":"مساعد ملحم", "project":"مشروع مصنع الحسيني",
         "daily_wage":8000, "work_days":8.5, "hours_total":68.0,
         "amount_due":68000, "amount_paid":47000, "remaining":21000,
         "notes":"تسليم حسابية: رقم 5553736"},
        {"name": "ياسر الجديدة", "job":"عامل", "project":"مشروع ابار التحيتا",
         "daily_wage":6000, "work_days":6.5, "hours_total":52.0,
         "amount_due":39000, "amount_paid":0, "remaining":39000,
         "notes":""},
        # ... المزيد من الصفوف
    ]
    wb = create_report_excel(data, "25/07/2025", "11/08/2025")
    stream = BytesIO()
    wb.save(stream)
    stream.seek(0)

    filename = f"كشف_تصفية_{datetime.datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
    response = make_response(stream.read())
    response.headers["Content-Disposition"] = f"attachment; filename*=UTF-8''{filename}"
    response.headers["Content-Type"] = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    return response

if __name__ == "__main__":
    app.run(debug=True)

ملاحظات حول الدالة:

openpyxl تسمح بالصياغة الأساسية، ودمج الخلايا وتلوينها. إن أردت تنسيقات متقدمة جداً (مثل طباعة رأس ثابت عبر صفحات)، استخدم xlsxwriter.

تأكد من تثبيت الحزمة: pip install openpyxl flask.

لتركيب الخط العربي داخل ملف Excel تظهر مشكلة إن لم يكن الجهاز يملك الخط؛ عند فتح الملف على جهاز آخر قد يختلف العرض. الحل الأفضل للطباعة النهائية: تصدير إلى PDF بعد التأكد من الخط أو توليد PDF في الخادم باستخدام مكتبة مثل WeasyPrint من نسخة HTML مُعدّة أو استخدام headless browser (wkhtmltopdf / Puppeteer).



---

4 — خِيارات بديلة / تحسينات مقترحة

لو تريد التصدير من جهة العميل (JS) بدون سيرفر: استخدم SheetJS (xlsx) لتوليد ملف Excel في المتصفح.

لإظهار نفس التصميم تمامًا في ملف PDF: أنشئ HTML (الذي أعطيتك أعلاه) وصدّر إلى PDF عبر Puppeteer (Node) أو wkhtmltopdf للحصول على نتائج دقيقة للخط والألوان.

لو المطلوب طباعة على ورق A4 من جانب الخادم مع تحكم تام بالخطوط، قد يكون من الأفضل: HTML → PDF ثم إرساله للمستخدم.

إضافة ميزات: توضيحات خلايا بالـ Tooltip (في HTML)، وفلترة/تجميع في الواجهة قبل التصدير، وتواقيع رقمية.



---

5 — نقاط تطبيقية مهمة (نصائح هندسية)

1. حافظ على مصدر بيانات واحد (قاعدة بيانات) وولد الـ HTML والـ Excel من نفس بيانات الـ API لتفادي اختلاف الأرقام.


2. اختبر الطباعة على أكثر من طابعة وبرنامج (Excel / LibreOffice / Google Sheets) لأن التنسيقات قد تختلف.


3. لو تحتاج دِقّة محاسبية، اجعل الأرقام كقيم رقمية في الـ Excel (ليس نص) حتى يمكن جمعها وتنفيذ صيغ عليها.


4. اختبر RTL جيدًا — بعض مكتبات توليد Excel لا تتعامل تماما مع اتجاه الخلايا، فضع المحاذاة right صراحة.




---

إذا أحببت، أقدملَك:

نسخة جاهزة (ملف zip) تحتوي report.html + app.py + ملف بيانات مثال JSON لتجربتها محليًا.

أو أعدل الكود ليتوافق مع قاعدة بياناتك (Postgres/SQLite) ويجلب البيانات تلقائيًا.


أي خيار تفضّل؟ أم أبدأ مباشرة بإنتاج ملف Excel حقيقي لديك مع بياناتك إذا أرسلت جدول بيانات عيّنة؟

